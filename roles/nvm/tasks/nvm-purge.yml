---
- name: Stopping Flux via PM2
  ansible.builtin.include_role:
    name: pm2
    tasks_from: pm2-stop.yml

- name: Stopping Daemon
  ansible.builtin.include_role:
    name: daemon
    tasks_from: daemon-stop.yml

- name: Purge Logrotate
  ansible.builtin.include_role:
    name: logrotate
    tasks_from: logrotate-purge.yml
    apply:
      tags:
        - nvm-purge
        - purge
      become: true

- name: Purge PM2
  ansible.builtin.include_role:
    name: pm2
    tasks_from: pm2-purge.yml
    apply:
      tags:
        - nvm-purge
        - purge
      become: true

- name: Purge Watchdog
  ansible.builtin.include_role:
    name: watchdog
    tasks_from: watchdog-purge.yml
    apply:
      tags:
        - nvm-purge
        - purge
      become: true

- name: Remove nvm and node files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /home/{{ global.user }}/n
    - /usr/local/bin/npm
    - /usr/local/lib/dtrace/node.d
    - /home/{{ global.user }}/.npm
    - /home/{{ global.user }}/.nvm
    - /home/{{ global.user }}/.pm2
    - /home/{{ global.user }}/.node-gyp
    - /opt/local/bin/node
    - /opt/local/include/node
    - /opt/local/lib/node_modules
  changed_when: false

- name: Find and remove files matching a pattern
  ansible.builtin.find:
    paths:
      - /usr/local/share/man/man1
      - /usr/local/bin
      - /usr/local/lib
      - /usr/local/include
    patterns:
      - 'node*'
  register: found_files

- name: Remove files matching the pattern
  ansible.builtin.file:
    path: "{{ item['path'] }}"
    state: absent
  with_items: "{{ found_files['files'] }}"

- name: Apt Remove NodeJS and NPM
  ansible.builtin.apt:
    name:
      - nodejs
      - npm
    purge: true
    autoremove: true

- name: Remove NVM config from .bashrc
  ansible.builtin.blockinfile:
    path: "/home/{{ global.user }}/.bashrc"
    marker: "# {mark} FluxNodeInstall Ansible MANAGED BLOCK"
    block: |
      export NVM_DIR="$HOME/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && source "$NVM_DIR/nvm.sh"
      [ -s "$NVM_DIR/bash_completion" ] && source "$NVM_DIR/bash_completion"
    state: absent
