#!/bin/bash

function get_ip(){
  WANIP=$(curl --silent -m 10 https://api4.my-ip.io/ip | tr -dc '[:alnum:].')
  if [[ "$WANIP" == "" || "$WANIP" = *html* ]]; then
    WANIP=$(curl --silent -m 10 https://checkip.amazonaws.com | tr -dc '[:alnum:].')
  fi
  if [[ "$WANIP" == "" || "$WANIP" = *html* ]]; then
    WANIP=$(curl --silent -m 10 https://api.ipify.org | tr -dc '[:alnum:].')
  fi
}
function get_device_name(){
  if [[ -f /home/$USER/device_conf.json ]]; then
    device_name=$(jq -r .device_name /home/$USER/device_conf.json)
  else
    device_name=$(ip addr | grep 'BROADCAST,MULTICAST,UP,LOWER_UP' | head -n1 | awk '{print $2}' | sed 's/://' | sed 's/@/ /' | awk '{print $1}')
  fi
}
function update_ip(){
  ip_exists="0"
  get_ip
  get_device_name
  if [[ "$device_name" != "" && "$WANIP" =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
    for i in $(ip --oneline addr show ${device_name} | grep "/32" | awk '{print $4}');
    do
      if [[ $i == "${WANIP}/32"  ]]; then
        ip_exists="1"
      else
        sudo ip addr del $i dev $device_name
      fi
    done
    if [[ "$ip_exists" == "0" ]]; then
      date_timestamp=$(date '+%Y-%m-%d %H:%M:%S')
      echo -e "New IP detected during $1, IP: $WANIP was added to $device_name at $date_timestamp" >> /home/$USER/ip_history.log
      sudo ip addr add $WANIP dev $device_name && sleep 2
    fi
  fi
}
if [[ $1 == "restart" ]]; then
  #give 3min to connect with internet
  sleep 180
fi
update_ip $1
