---
- name: Create .flux dir if it doesn't exist
  ansible.builtin.file:
    path: "{{ daemon.path }}"
    mode: "0775"
    state: directory
    owner: "{{ global.user }}"
    group: "{{ global.user }}"

- name: Detect architecture
  ansible.builtin.set_fact:
    system_arch: "{{ ansible_machine | replace('x86_64', 'amd64') | replace('aarch64', 'arm64') }}"

- name: Add GPG Keys
  ansible.builtin.apt_key:
    keyserver: hkp://keyserver.ubuntu.com:80
    id: 4B69CA27A986265D
    keyring: "{{ daemon.keyring }}"

- name: Add Daemon APT Repository
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ system_arch }} signed-by={{ daemon.keyring }}] https://apt.runonflux.io/ {{ ansible_distribution_release }} main"
    state: present
    filename: "{{ daemon.list_file }}"

- name: Install Flux Daemon and Bench
  ansible.builtin.apt:
    name:
      - flux
      - fluxbench
    update_cache: true
    state: present

- name: Install Flux Daemon Service "{{ daemon.service_name }}"
  ansible.builtin.template:
    dest: "/etc/systemd/system/{{ daemon.service_name }}"
    src: "{{ daemon.service_name }}.j2"
    owner: root
    group: root
    mode: "0644"

- name: Verify Permissions
  ansible.builtin.file:
    path: "/usr/local/bin"
    mode: "0755"
    state: directory

- name: Run ZKSnark Fetch
  ansible.builtin.command: bash -ilc flux-fetch-params.sh
  changed_when: true
  become_user: "{{ global.user }}"

- name: User Perms
  ansible.builtin.file:
    dest: /home/{{ global.user }}
    state: directory
    recurse: true
    owner: "{{ global.user }}"
    group: "{{ global.user }}"

- name: Reload and enable "{{ daemon.service_name }}"
  ansible.builtin.systemd:
    name: "{{ daemon.service_name }}"
    daemon_reload: true
    state: started
    enabled: true
